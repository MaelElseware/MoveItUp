<Window x:Class="TriviaExercise.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Move It Up !" Width="530" MaxHeight="700"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize"
        Background="#F5F5F5"
        SizeToContent="Height">

    <Window.Resources>
        <!-- Modern GroupBox Style -->
        <Style x:Key="ModernGroupBox" TargetType="GroupBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="#E0E0E0"
                            BorderThickness="1"
                            CornerRadius="8">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" CornerRadius="8,8,0,0" Padding="10,3" Margin="0,0,0,-5">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <!-- Use BorderBrush color -->
                                                <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush.Color, FallbackValue=#FFE4ECF0}"/>
                                                <GradientStop Color="White" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ContentPresenter ContentSource="Header"
                                                TextElement.FontWeight="Thin"
                                                TextElement.FontSize="11"
                                                TextElement.FontFamily="Alef"
                                                TextElement.Foreground="#878787"/>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- NoName GroupBox Style -->
        <Style x:Key="NoNameModernGroupBox" TargetType="GroupBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="#E0E0E0"
                            BorderThickness="1"
                            CornerRadius="8">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" CornerRadius="8,8,0,0" Padding="0,0" Margin="0,0,0,-15">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <!-- Use BorderBrush color -->
                                                <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush.Color, FallbackValue=#FFE4ECF0}"/>
                                                <GradientStop Color="White" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Button Style -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="#3498DB"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2980B9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#21618C"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#BDC3C7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#95A5A6"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7F8C8D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#5D6D6E"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Test Button Style -->
        <Style x:Key="TestButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#E67E22"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D35400"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#BA4A00"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Padding" Value="6,1,8,1"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover effect - same as ComboBox -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3498DB"/>
                            </Trigger>

                            <!-- Focus effect -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3498DB"/>
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#F8F9FA"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#E9ECEF"/>
                                <Setter Property="Foreground" Value="#95A5A6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Scroll viewer -->
        <Style x:Key="SimpleScrollViewer" TargetType="ScrollViewer">
            <Style.Resources>
                <Style TargetType="ScrollBar">
                    <Setter Property="Width" Value="14"/>
                    <Setter Property="MinWidth" Value="8"/>
                    <Setter Property="Background" Value="#FFFDEBEB"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ScrollBar">
                                <Grid Background="Transparent">
                                    <Track Name="PART_Track" 
                                   IsDirectionReversed="True" 
                                   Focusable="False">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand" 
                                                  Opacity="0" 
                                                  Focusable="False"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand" 
                                                  Opacity="0" 
                                                  Focusable="False"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Background="#FFAAB5BA" 
                                           BorderBrush="Transparent"
                                           Margin="2">
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Rectangle Fill="{TemplateBinding Background}"
                                                          RadiusX="4" RadiusY="4"/>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="False"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="12"/>
                            <Setter Property="MinHeight" Value="8"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        <!-- Modern ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Main border -->
                            <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"/>

                            <!-- Content and arrow container -->
                            <Grid Margin="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>

                                <!-- Selected item display -->
                                <ContentPresenter x:Name="ContentSite"
                                        Grid.Column="0"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsHitTestVisible="False"/>

                                <!-- Arrow -->
                                <Path x:Name="Arrow"
                            Grid.Column="1"
                            Fill="#7F8C8D"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>

                                <!-- Invisible toggle button for clicking -->
                                <ToggleButton x:Name="ToggleButton"
                                    Grid.ColumnSpan="2"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Focusable="False"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="Transparent"/>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Grid>

                            <!-- Dropdown popup -->
                            <Popup x:Name="PART_Popup"
                         Placement="Bottom"
                         IsOpen="{TemplateBinding IsDropDownOpen}"
                         AllowsTransparency="True"
                         Focusable="False"
                         PopupAnimation="Slide">
                                <Border Background="White"
                              BorderBrush="#BDC3C7"
                              BorderThickness="1"
                              CornerRadius="4"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border.Effect>
                                        <DropShadowEffect Color="#40000000" BlurRadius="8" ShadowDepth="2" Opacity="0.3"/>
                                    </Border.Effect>
                                    <ScrollViewer Style="{StaticResource SimpleScrollViewer}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Hover effect - ONLY border and arrow -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3498DB"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="#3498DB"/>
                            </Trigger>

                            <!-- Focus effect -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3498DB"/>
                            </Trigger>

                            <!-- Dropdown open effect -->
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3498DB"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="#3498DB"/>
                                <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z"/>
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#F8F9FA"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#E9ECEF"/>
                                <Setter Property="Foreground" Value="#95A5A6"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="#BDC3C7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ComboBoxItem Style -->
        <Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="ItemBorder"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover effect -->
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="ItemBorder" Property="Background" Value="#F0F6FF"/>
                                <Setter Property="Foreground" Value="#2980B9"/>
                            </Trigger>

                            <!-- Selected effect -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="ItemBorder" Property="Background" Value="#E3F2FD"/>
                                <Setter Property="Foreground" Value="#2980B9"/>
                                <Setter Property="FontWeight" Value="Medium"/>
                            </Trigger>

                            <!-- Disabled effect -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#95A5A6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Margin="10,7,10,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" 

        BorderThickness="0,0,0,1" 
        Padding="15,5" 
        Margin="0,0,0,5">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Text="🏃‍♂️" FontSize="32" Margin="0,0,10,0" VerticalAlignment="Bottom"/>
                <TextBlock Text="Move It Up !" 
                   FontSize="32" 
                   FontWeight="Thin" 
                   Foreground="#2C3E50" 
                   HorizontalAlignment="Center"
                   Margin="0,0,0,0"/>
            </StackPanel>
        </Border>

        <!-- Control Buttons -->
        <Border Grid.Row="1" Background="White" BorderBrush="#E0E0E0" 
                BorderThickness="1" CornerRadius="8" Padding="7" Margin="0,-2,0,6">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button x:Name="StartButton" Content="Start Timer" Width="110" Height="35" 
                        Style="{StaticResource ModernButton}"
                        Margin="0,0,10,0" Click="StartButton_Click"/>
                <Button x:Name="StopButton" Content="Stop Timer" Width="110" Height="35" 
                        Style="{StaticResource SecondaryButton}"
                        Margin="0,0,10,0" Click="StopButton_Click" IsEnabled="False"/>
                <Button x:Name="TestButton" Content="Quizz me" Width="110" Height="35" 
                        Style="{StaticResource TestButton}"
                        Click="TestButton_Click"/>
            </StackPanel>
        </Border>

        <!-- Scrollable Content Area -->
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Style="{StaticResource SimpleScrollViewer}" VerticalContentAlignment="Stretch" VerticalAlignment="Top" >
            <StackPanel>

                <!-- Player Progress -->
                <GroupBox Header="Player Progress" Style="{StaticResource NoNameModernGroupBox}" Margin="0,0,0,5" BorderBrush="#BFE0E0E0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="457*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Main Status -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,7" Grid.Column="1" Width="Auto">
                            <TextBlock x:Name="PlayerTitleTextBlock" 
                                       Text="Level 1 | Knowledge Seeker | 0 pts" 
                                       Margin="0,-4,0,-2"
                                       FontSize="15" FontWeight="Thin" 
                                       Foreground="#2C3E50" FontFamily="Ink Free" Width="Auto"/>
                        </StackPanel>

                        <!-- Category Details -->
                        <Border Grid.Row="1" Background="#F8F9FA" BorderBrush="#E9ECEF" 
                                BorderThickness="1" CornerRadius="4" Padding="10" Grid.ColumnSpan="2">
                            <ScrollViewer MaxHeight="120" VerticalScrollBarVisibility="Auto">
                                <TextBlock x:Name="CategoryProgressTextBlock" 
                                           Text="Category progress loading..."
                                           FontSize="11" FontFamily="Consolas"
                                           TextWrapping="Wrap"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </GroupBox>

                <!-- Timer Status -->
                <Border Grid.Row="1" Background="White" BorderBrush="#E0E0E0" 
                        BorderThickness="1" CornerRadius="8" Padding="7" Margin="0,-2,0,6">
                    <StackPanel>
                        <TextBlock x:Name="NextQuestionTextBlock" FontWeight="SemiBold" 
                                   Margin="0,0,0,0" Text="Timer not running" Foreground="#2C3E50" TextAlignment="Center"/>
                        <TextBlock x:Name="NextDrinkTextBlock" FontWeight="SemiBold" 
                                   Margin="0,0,0,0" Text="" Visibility="Collapsed" Foreground="#27AE60" TextAlignment="Center"/>
                        <TextBlock x:Name="ProgressCooldownTextBlock" FontWeight="SemiBold" 
                                   Margin="0,0,0,0" Text="" Visibility="Collapsed" Foreground="#E67E22" TextAlignment="Center"/>
                    </StackPanel>
                </Border>

                <TextBlock x:Name="ToggleOptionsTextBlock" 
                           Text="▼ Show options" 
                           VerticalAlignment="Center" 
                           Foreground="#FF02A4FF" 
                           HorizontalAlignment="Center" 
                           Margin="0,-5,7,4"
                           Cursor="Hand"
                           MouseLeftButtonDown="ToggleOptionsTextBlock_MouseLeftButtonDown"/>

                <StackPanel x:Name="OptionsPanel" Visibility="Collapsed">
                    <!-- Timer Settings -->
                    <GroupBox Header="Timer Settings" Style="{StaticResource ModernGroupBox}" BorderBrush="#BFCDE2F0" Margin="0,0,0,5">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
                                <TextBlock Text="Exercise Interval " VerticalAlignment="Center" Width="140" />
                                <TextBox x:Name="IntervalTextBox" Text="50" Width="60" 
                                     Style="{StaticResource ModernTextBox}"
                                     VerticalAlignment="Top" TextChanged="IntervalTextBox_TextChanged" Height="25" HorizontalAlignment="Center" ToolTip="At which interval question (and thus exercises) will pop ?"/>
                                <TextBlock Text="minutes" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="#FF565555"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
                                <CheckBox x:Name="DrinkReminderCheckBox" Content="Drink reminder every" Width="140"
                                      VerticalAlignment="Center" Margin="0,0,0,0" 
                                      Checked="DrinkReminderCheckBox_CheckedChanged" 
                                      Unchecked="DrinkReminderCheckBox_CheckedChanged"/>
                                <TextBox x:Name="DrinkIntervalTextBox" Text="90" Width="60" Height="25" 
                                     Style="{StaticResource ModernTextBox}"
                                     VerticalAlignment="Center" TextChanged="DrinkIntervalTextBox_TextChanged" ToolTip="Don't forget to drink ! Simple window reminder will pop every X minutes"/>
                                <TextBlock Text="minutes" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="#FF565555"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Pre-question alert:" VerticalAlignment="Center" Width="140"/>
                                <TextBox x:Name="PreQuestionAlertTextBox" Text="1" Width="60" Height="25"
                                     Style="{StaticResource ModernTextBox}" VerticalAlignment="Center" 
                                     TextChanged="PreQuestionAlertTextBox_TextChanged" ToolTip="A nice and soothing sound before the exercise arrive, so you'll be prepared."/>
                                <TextBlock Text="minutes before" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="#FF565555"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <!-- Exercise Settings -->
                    <GroupBox Header="Exercise Settings" Style="{StaticResource ModernGroupBox}" BorderBrush="#BFE8E6F9" Margin="0,0,0,5">
                        <!--Visibility="Collapsed">-->
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Difficulty:" VerticalAlignment="Center" Width="140"/>
                            <ComboBox x:Name="ExerciseDifficultyComboBox" Width="200" Height="25"
                                  Style="{StaticResource ModernComboBox}" VerticalAlignment="Center"
                                  ItemContainerStyle="{StaticResource ModernComboBoxItem}"
                                  SelectionChanged="ExerciseDifficultyComboBox_SelectionChanged" ToolTip="Exercise Difficulty depending on how much you want to activate your body">
                                <ComboBoxItem Content="Easy" Tag="Easy"/>
                                <ComboBoxItem Content="Medium" Tag="Medium"/>
                                <ComboBoxItem Content="Hard" Tag="Hard"/>
                                <ComboBoxItem Content="Match Question" Tag="MatchQuestion" IsSelected="True"/>
                                <ComboBoxItem Content="Mixed (Random)" Tag="Mixed"/>
                            </ComboBox>
                        </StackPanel>
                    </GroupBox>

                    <!-- Inactivity Monitoring Settings -->
                    <GroupBox Header="Inactivity Monitoring" Style="{StaticResource ModernGroupBox}" BorderBrush="#BFEEF0CD" Margin="0,0,0,5">
                        <!--Visibility="Collapsed">-->
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
                                <TextBlock Text="Behavior:" VerticalAlignment="Center" Width="140"/>
                                <ComboBox x:Name="ActivityBehaviorComboBox" Width="200" Height="25"
                      Style="{StaticResource ModernComboBox}" VerticalAlignment="Center"
                      ItemContainerStyle="{StaticResource ModernComboBoxItem}"
                      SelectionChanged="ActivityBehaviorComboBox_SelectionChanged" ToolTip="What happens to the timer when you are inactive past the inactivity threshold ?">
                                    <ComboBoxItem Content="Disabled" Tag="Disabled"/>
                                    <ComboBoxItem Content="Pause Only" Tag="PauseOnly"/>
                                    <ComboBoxItem Content="Pause + Reset" Tag="PauseAndReset" IsSelected="True"/>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                <TextBlock Text="Inactivity threshold:" VerticalAlignment="Center" Width="140"/>
                                <TextBox x:Name="InactivityThresholdTextBox" Text="5" Width="60" Height="25"
                     Style="{StaticResource ModernTextBox}" VerticalAlignment="Center"
                     TextChanged="InactivityThresholdTextBox_TextChanged" ToolTip="After how many minutes you are considered inactive and the timer adapts (depending on the behavior set atop)"/>
                                <TextBlock Text="minutes" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="#FF565555"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <!-- Application Settings -->
                    <GroupBox Header="Application Settings" Style="{StaticResource ModernGroupBox}" BorderBrush="#BFF3E6D9" Margin="0,0,0,5">
                        <StackPanel>
                            <CheckBox x:Name="DiscordRichPresenceCheckBox" Content="🎮 Enable Discord Rich Presence" 
                                  Checked="DiscordRichPresenceCheckBox_CheckedChanged" Unchecked="DiscordRichPresenceCheckBox_CheckedChanged" 
                                  Margin="0,0,0,8" ToolTip="Enable rich presence - Basically showing on discord your level and main title."/>
                            <CheckBox x:Name="SoundsEnabledCheckBox" Content="🔊 Enable sound effects" 
                                  Margin="0,0,0,8"
                                  Checked="SoundsEnabledCheckBox_CheckedChanged"
                                  Unchecked="SoundsEnabledCheckBox_CheckedChanged" ToolTip="enable or disable all sound effects started via the app."/>
                            <CheckBox x:Name="StartMinimizedCheckBox" Content="Start minimized to system tray" 
                                  Margin="0,0,0,8"
                                  Checked="StartMinimizedCheckBox_CheckedChanged"
                                  Unchecked="StartMinimizedCheckBox_CheckedChanged" ToolTip="Will always start minimized apon launch. (doesn't need to be set when the app is started by window on startup."/>
                            <CheckBox x:Name="StartupCheckBox" Content="Start with Windows" 
                                  Checked="StartupCheckBox_CheckedChanged" 
                                  Unchecked="StartupCheckBox_CheckedChanged" ToolTip="Do we start the app with window ? Will always start minimized (to the tray)"/>
                        </StackPanel>
                    </GroupBox>

                    <!-- File Settings -->
                    <GroupBox Header="File Settings" Style="{StaticResource ModernGroupBox}" BorderBrush="#BFCDF0E2" Margin="0,0,0,5">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Width="Auto">
                                <TextBlock Text="Data Folder:" VerticalAlignment="Center" Width="75" FontWeight="Medium"/>
                                <TextBox x:Name="DataFolderPathTextBox" Width="295" Height="25" IsReadOnly="True" Padding="2,1,2,2"
                     Style="{StaticResource ModernTextBox}" VerticalAlignment="Center" ToolTip="where the question and exercise json are located (by default your app location)"/>
                                <Button x:Name="BrowseFolderButton" Content="Browse" Width="80"
                    Style="{StaticResource SecondaryButton}"
                    Margin="10,0,0,0" Click="BrowseFolderButton_Click"/>
                            </StackPanel>

                            <TextBlock x:Name="LoadedFilesTextBlock"
                                   Text=""
                                   TextWrapping="Wrap" 
                                   Foreground="#666666" 
                                   FontSize="11" 
                                   Margin="0,0,0,0"/>
                        </StackPanel>
                    </GroupBox>

                    <!-- Status Log -->
                    <GroupBox Header="Status Log" Style="{StaticResource ModernGroupBox}" Margin="0,0,0,5">
                        <TextBox x:Name="StatusTextBox" IsReadOnly="True" 
                             TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" 
                             Background="#FAFAFA" BorderBrush="#E0E0E0"
                             MinHeight="100" MaxHeight="150"
                             Padding="8" FontFamily="Consolas" FontSize="11"
                             TextChanged="StatusTextBox_TextChanged"/>
                    </GroupBox>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>